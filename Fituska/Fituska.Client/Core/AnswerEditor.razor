@using Fituska.Shared.Models.Answer
@inject HttpClient Http

@if (answerToUpdate is not null)
{
    <EditForm Model="answerToUpdate" OnSubmit="SubmitUpdatedAnswer">
        <label for="ans-update-text">Text:</label>
        <InputTextArea id="ans-update-text" @bind-Value="answerToUpdate.Text" class="form-control mb-2" />
        
        <button type="submit" class="btn btn-sm btn-primary">Uložit</button>
        <button type="button" class="btn btn-sm btn-outline-danger" @onclick="CancelClick">Zrušit</button>
    </EditForm>
}

@code
{
    [Parameter]
    public AnswerDetailModel Answer { get; set; }

    [Parameter]
    public EventCallback<AnswerDetailModel?> OnSubmit { get; set; }

    AnswerNewModel answerToUpdate;

    async Task SubmitUpdatedAnswer()
    {
        if (string.IsNullOrWhiteSpace(answerToUpdate.Text))
        {
            return;
        }
        var response = await Http.PutAsJsonAsync<AnswerNewModel>(ApiEndpoints.AnswerUrl, answerToUpdate);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<AnswerDetailModel>();
            await OnSubmit.InvokeAsync(result);
        }
    }

    async Task CancelClick() => await OnSubmit.InvokeAsync(null);

    protected override async Task OnInitializedAsync()
    {
        answerToUpdate = new()
        {
            Id = Answer.Id,
            Text = Answer.Text,
            UserId = Answer.User.Id,
            QuestionId = Answer.QuestionId
        };
        await base.OnInitializedAsync();
    }
}
