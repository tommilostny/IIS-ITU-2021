@using Fituska.Shared.Models.Answer
@using Fituska.Shared.Models.Comment
@using Fituska.Shared.Models.User

<div class="card answer-box mb-3" style="backroungd-color: rgb(@RedTint(), 0, 0)">
    <div class="card-body">
        <div class="row">
            <div class="col">
                <h6 class="card-subtitle mb-2 text-muted">
                    <a href="user/@Answer.User.UserName">@Answer.User.UserName</a> (@Answer.CreationTime)
                </h6>
                <p class="card-text">
                    @Answer.Text
                </p>
                <ReplyBox OnSubmit="AddComment" />
            </div>
            <div class="col-3 col-sm-2 col-md-1">
                <Voting Votes="Answer.Votes" @ref="voting" />
            </div>
        </div>
    </div>
    @if (Answer.Comments.Count > 0)
    {
        @foreach (var comment in Answer.Comments.OrderBy(c => c.CreationTime).Reverse())
        {
            <CommentBox Comment="@comment" />
        }
    }
</div>

@code
{
    [Parameter]
    public AnswerDetailModel Answer { get; set; }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    Voting voting;

    async Task AddComment(string text)
    {
        var user = new UserListModel { UserName = (await AuthenticationState).User.Identity.Name, Photo = null };
        var comment = new CommentDetailModel { User = user, Text = text, CreationTime = DateTime.Now };
        Answer.Comments.Add(comment);
    }

    int RedTint()
    {
        if (voting is null)
            Console.WriteLine("null");
        return 0;
        //voting.Rating < 0 ? Math.Clamp(-voting.Rating, 0, 255) : 0;
    }

    //int GreenTint() => voting.Rating > 0 ? Math.Clamp(voting.Rating, 0, 255) : 0;
}
