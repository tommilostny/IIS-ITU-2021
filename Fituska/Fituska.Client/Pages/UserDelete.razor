@page "/user/delete"
@inject HttpClient Http
@inject FituskaAuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorageService
@inject LastPageStorageService LastPageStorageService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <h3>Smazat účet uživatele <em>@context.User.Identity.Name</em>?</h3>
        <button class="btn btn-danger" @onclick="() => Delete(context.User.Identity.Name)">Ano</button>
        <button class="btn btn-secondary" onclick="window.history.go(-1); return false;">Ne</button>
    </Authorized>
    <NotAuthorized>
        @{ NavigationManager.NavigateTo("/"); }
    </NotAuthorized>
</AuthorizeView>

@code
{
    async Task Delete(string username)
    {
        await Http.DeleteAsync(ApiEndpoints.UserNameUrl(username));

        if (await LocalStorageService.ContainKeyAsync(StorageNames.BearerToken))
        {
            await LocalStorageService.RemoveItemAsync(StorageNames.BearerToken);
            AuthenticationStateProvider.SignOut();
        }
        StateHasChanged();
    }
}
