@page "/course/{CourseUrl}"
@using Fituska.Shared.Models.Category
@using Fituska.Shared.Models.Course
@inherits LastPageSavableComponentBase
@inject HttpClient Http

@if (course is null)
{
    <h3>Načítání...</h3>
}
else
{
    <h1>@course.Name <small>(@course.Shortcut)</small></h1>
    <div class="row mt-4">
        <div class="col">
            <p>Ročník: @ConverterService.YearOfStudyDecode(course.YearOfStudy)</p>
            <p>Semestr: @ConverterService.SemesterDecode(course.Semester)</p>
            <p>Vyučující: <a href="/user/@course.Lecturer.UserName">@course.Lecturer.UserName</a></p>
        </div>
        <div class="col-md-8 col-lg-9">
            <p>@course.Description</p>
        </div>
    </div>
    <AuthorizeView>
        <Authorized>
            @if (context.User.Identity.Name == course.Lecturer.UserName)
            {
                <ReplyBox AddButtonLabel="Přidat kategorii" OnSubmit="AddCategory" />
                <hr />
            }
        </Authorized>
    </AuthorizeView>
    @foreach (var category in course.Categories)
    {
        <CategoryBox Category="@category" LecturerUserName="@course.Lecturer.UserName" OnRemoveClick="RemoveCategory" />
    }
}

@code
{
    [Parameter]
    public string CourseUrl { get; set; }

    CourseDetailModel course;

    protected override async Task OnInitializedAsync()
    {
        course = await Http.GetFromJsonAsync<CourseDetailModel>(ApiEndpoints.CourseUrlUrl(CourseUrl));
        await base.OnInitializedAsync();
    }

    void AddCategory(string name)
    {
        course.Categories.Add(new CategoryDetailModel { Name = name, Year = DateTime.UtcNow.Year, Questions = new() });
    }

    void RemoveCategory(CategoryDetailModel category)
    {
        course.Categories.Remove(category);
    }
}
