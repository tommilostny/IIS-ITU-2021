@page "/signin"
@using Fituska.Shared.Models.User
@inject FituskaAuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@inject ILocalStorageService LocalStorageService
@inject LastPageStorageService LastPageStorageService

<h2>Přihlášení</h2>

@if (!signInSuccess)
{
    <EditForm Model="userToSignIn" OnValidSubmit="SignInAsync">
        <DataAnnotationsValidator />

        <div class="form-group my-3">
            <label for="username">Uživatelské jméno:</label>
            <InputText id="username" class="form-control" @bind-Value="userToSignIn.UserName" />
            <ValidationMessage For="@(() => userToSignIn.UserName)" />
        </div>

        <div class="form-group my-3">
            <label for="password">Heslo:</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="userToSignIn.Password" />
            <ValidationMessage For="@(() => userToSignIn.Password)" />
        </div>

        <ValidationSummary />

        <button type="submit" class="btn btn-success mb-3">Přihlásit se</button>

        @if (signInFailure)
        {
            <p class="my-3 text-danger">Přihlášení se nezdařilo. Zkontroloujte zadané jméno a heslo.</p>
        }
    </EditForm>
}
else
{
    LastPageStorageService.NavigateToLastPage();
}

@code
{
    private readonly UserSignInModel userToSignIn = new();
    private bool signInSuccess = false;
    private bool signInFailure = false;

    private async Task SignInAsync()
    {
        signInFailure = false;
        var httpResponseMessage = await Http.PostAsJsonAsync(ApiEndpoints.SignInUrl, userToSignIn);

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            var jsonWebToken = await httpResponseMessage.Content.ReadAsStringAsync();
            await LocalStorageService.SetItemAsync(JwtNames.BearerToken, jsonWebToken);
            await AuthenticationStateProvider.SignIn();

            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(JwtNames.Bearer, jsonWebToken);
            signInSuccess = true;
            return;
        }
        signInFailure = true;
    }
}
