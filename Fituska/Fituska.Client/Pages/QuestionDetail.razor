@page "/question/{Id:guid}"
@using Fituska.Shared.Models.Answer
@using Fituska.Shared.Models.Question
@using Fituska.Shared.Models.User
@inherits LastPageSavableComponentBase

@if (question is null)
{
    <h3>Loading...</h3>
}
else
{
    <div class="mb-4">
        <h2>@question.Title</h2>
        <h4>@question.Text</h4>
    </div>
    <p class="text-muted">Vytvořeno uživatelem <a href="/user/@question.User.UserName">@question.User.UserName</a>, @question.CreationTime.</p>
    <ReplyBox OnSubmit="AddAnswer" />
    <hr />
    <h5 class="mb-3">@AnswersCount</h5>
    @foreach (var answer in question.Answers.OrderBy(a => a.Votes.Sum(v => (int)v.Vote)).ThenBy(a => a.CreationTime).Reverse())
    {
        <AnswerBox Answer="answer" />
    }
}

@code
{
    [Parameter]
    public Guid Id { get; set; }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    QuestionDetailModel question;

    protected override async Task OnInitializedAsync()
    {
        question = DesignTimeSeed.QuestionDetailModels.FirstOrDefault(q => q.Id == Id);
        await base.OnInitializedAsync();
    }

    async Task AddAnswer(string text)
    {
        var user = new UserListModel { UserName = (await AuthenticationState).User.Identity.Name, PhotoUrl = null };
        var answer = new AnswerModel { Text = text, User = user, CreationTime = DateTime.Now };
        question.Answers.Add(answer);
    }

    string AnswersCount => question.Answers.Count.ToString() + question.Answers.Count switch
    {
        1 => " odpověď",
        >= 2 and <= 4  => " odpovědi",
        _ => " odpovědí"
    };
}
