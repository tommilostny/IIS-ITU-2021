@inherits LayoutComponentBase
@inject FituskaAuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@inject ILocalStorageService LocalStorageService
@inject Base64ImageService Base64Service

@if (profilePicture is not null)
{
    <CascadingValue Value="profilePicture">
        <NavMenu @ref="navMenu" />

        <CascadingValue Value="navMenu">
            <div class="page">
                <main class="container">
                    <article class="content">
                        @Body
                    </article>
                </main>
            </div>
        </CascadingValue>
    </CascadingValue>
}

@code
{
    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationState { get; set; }

    ProfilePictureProvider? profilePicture;

    NavMenu? navMenu;

    protected override async Task OnInitializedAsync()
    {
        if (await LocalStorageService.ContainKeyAsync(StorageNames.BearerToken))
        {
            var savedToken = await LocalStorageService.GetItemAsync<string>(StorageNames.BearerToken);
            await AuthenticationStateProvider.SignIn();

            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(StorageNames.Bearer, savedToken);            
            StateHasChanged();
        }
        var photoProvider = new ProfilePictureProvider(AuthenticationState, LocalStorageService, Http, Base64Service);
        profilePicture = await photoProvider.Inititialize();

        await base.OnInitializedAsync();
    }
}
